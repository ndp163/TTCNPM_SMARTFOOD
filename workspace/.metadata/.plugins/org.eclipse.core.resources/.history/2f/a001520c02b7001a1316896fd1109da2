package com.smartfoodhcmut.controller.admin.api;

import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ResourceBundle;

import javax.inject.Inject;
import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.smartfoodhcmut.model.FoodsModel;
import com.smartfoodhcmut.model.UserModel;
import com.smartfoodhcmut.service.IFoodsService;
import com.smartfoodhcmut.utils.HttpUtil;
import com.smartfoodhcmut.utils.SessionUtil;

@WebServlet(urlPatterns = {"/api-admin-foods"})
@MultipartConfig(fileSizeThreshold = 1024 * 1024 * 2, 
					maxFileSize = 1024 * 1024 * 10, 
					maxRequestSize = 1024 * 1024 * 50) 
public class FoodsAPI extends HttpServlet {

	ResourceBundle resourceBundle = ResourceBundle.getBundle("db");
	
	public Connection getConnection() {
		try {
			Class.forName(resourceBundle.getString("driverName"));
			String url = resourceBundle.getString("url");
			String user = resourceBundle.getString("user");
			String password = resourceBundle.getString("password");
			return DriverManager.getConnection(url, user, password);
		} catch (ClassNotFoundException | SQLException e) {
			return null;
		}
	}

	
	@Inject
	private IFoodsService foodsService;
	private static final long serialVersionUID = 2535844104962403259L;
	
	PrintWriter out;
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) 
			throws ServletException, IOException {
		
		response.setContentType("text/html;charset=UTF-8");
		out = response.getWriter();
		Part part = request.getPart("thumbnail");
		if (part != null) {
			try {
				Connection con = getConnection();
				PreparedStatement ps = con.prepareStatement("INSERT INTO foods(thumbnail) VALUES(?)");
				InputStream is = part.getInputStream();
				ps.setBlob(1, is);
				ps.executeUpdate();
			} catch(Exception e) {
				out.println(e);
			}
		}
		
		ObjectMapper mapper = new ObjectMapper();
		request.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		FoodsModel foodsModel = HttpUtil.of(request.getReader()).toModel(FoodsModel.class);	
		foodsModel.setCreatedBy(((UserModel) SessionUtil.getInstance().getValue(request, "USERMODEL")).getUserName());
		foodsModel = foodsService.save(foodsModel);
		mapper.writeValue(response.getOutputStream(), foodsModel);
	}

	protected void doPut(HttpServletRequest request, HttpServletResponse response) 
			throws ServletException, IOException {
		ObjectMapper mapper = new ObjectMapper();
		request.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		FoodsModel updateFoods = HttpUtil.of(request.getReader()).toModel(FoodsModel.class);
		updateFoods.setCreatedBy(((UserModel) SessionUtil.getInstance().getValue(request, "USERMODEL")).getUserName());
		updateFoods = foodsService.update(updateFoods);
		mapper.writeValue(response.getOutputStream(), updateFoods);

	}
	protected void doDelete(HttpServletRequest request, HttpServletResponse response) 
			throws ServletException, IOException {
		ObjectMapper mapper = new ObjectMapper();
		request.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		FoodsModel foodsModel = HttpUtil.of(request.getReader()).toModel(FoodsModel.class);
		foodsService.delete(foodsModel.getIds());
		mapper.writeValue(response.getOutputStream(), "{}");
	}
}
