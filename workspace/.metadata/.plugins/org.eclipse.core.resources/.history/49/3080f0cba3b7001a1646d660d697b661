package com.smartfoodhcmut.controller.admin.api;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ResourceBundle;

import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

@WebServlet("/ThumbnailUpload")
@MultipartConfig(fileSizeThreshold = 1024 * 1024 * 2,
			maxFileSize = 1024 * 1024 * 10,
			maxRequestSize = 1024 * 1024 * 50)

public class ThumbnailUpload extends HttpServlet {

	ResourceBundle resourceBundle = ResourceBundle.getBundle("db");
	
	public Connection getConnection() {
		try {
			Class.forName(resourceBundle.getString("driverName"));
			String url = resourceBundle.getString("url");
			String user = resourceBundle.getString("user");
			String password = resourceBundle.getString("password");
			return DriverManager.getConnection(url, user, password);
		} catch (ClassNotFoundException | SQLException e) {
			return null;
		}
	}	
	
	private static final long serialVersionUID = 1L;
	private static final String SAVE_DIR="D:\\CNPM-SmartFood-master\\CNPM-SmartFood-master\\workspace\\smartfood-06-2020\\src\\main\\webapp\\views\\web\\image\\";
	
	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		
		String savePath = SAVE_DIR + File.separator + fileName;
		File fileSaveDir = new File(savePath);
		part.write(savePath + File.separator); 
		
		try {
			Connection conn = getConnection();
			conn.setAutoCommit(false);
			Part part = request.getPart("thumbnail");
			String fileName = extractFileName(part);
			if (fileName != null && fileName.length() > 0) {
				InputStream is = part.getInputStream();
			
			}
			conn.commit();
		} catch (Exception e) {
			out.println(e);
		}			
	}
		
		private String extractFileName(Part part) {
			String contentDisp = part.getHeader("content-disposition");
			String[] items = contentDisp.split(";");
			for (String s : items) {
				if (s.trim().startsWith("filename")) {
					return s.substring(s.indexOf("=") + 2, s.length() - 1);
				}
			}
			return "";
		}
}
