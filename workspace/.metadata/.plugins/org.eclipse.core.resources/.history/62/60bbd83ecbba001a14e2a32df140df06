package com.smartfoodhcmut.controller.admin.api;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.mservice.allinone.models.CaptureMoMoResponse;
import com.mservice.allinone.models.PayATMResponse;
import com.mservice.allinone.models.QueryStatusTransactionResponse;
import com.mservice.allinone.processor.allinone.CaptureMoMo;
import com.mservice.allinone.processor.allinone.PayATM;
import com.mservice.allinone.processor.allinone.QueryStatusTransaction;
import com.mservice.allinone.processor.allinone.RefundStatus;
import com.mservice.pay.models.POSPayResponse;
import com.mservice.pay.models.TransactionQueryResponse;
import com.mservice.pay.models.TransactionRefundResponse;
import com.mservice.pay.processor.notallinone.POSPay;
import com.mservice.pay.processor.notallinone.PayConfirmation;
import com.mservice.pay.processor.notallinone.TransactionQuery;
import com.mservice.pay.processor.notallinone.TransactionRefund;
import com.mservice.shared.constants.Parameter;
import com.mservice.shared.constants.RequestType;
import com.mservice.shared.sharedmodels.Environment;
import com.mservice.shared.sharedmodels.Environment.ProcessType;
import com.mservice.shared.sharedmodels.PartnerInfo;



@WebServlet("/ThumbnailUpload")
public class PaymentAPI extends HttpServlet {
	
	private static final long serialVersionUID = 1L;
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) 
			throws ServletException, IOException {
      
		String requestId = String.valueOf(System.currentTimeMillis());
        String orderId = String.valueOf(System.currentTimeMillis());
        long amount = 50000;

        String orderInfo = "Pay With MoMo";
        String returnURL = "https://google.com.vn";
        String notifyURL = "https://google.com.vn";
        String extraData = "";
        String bankCode = "SML";
        String customerNumber = "0963181714";

        Environment environment = Environment.selectEnv(Environment.EnvTarget.DEV, Environment.ProcessType.PAY_GATE);

//          Please uncomment the code to actually use the necessary All-In-One gateway payment processes
//          Remember to change the IDs

            try {
				CaptureMoMoResponse captureMoMoResponse = CaptureMoMo.process(environment, orderId, requestId, Long.toString(amount), "", returnURL, notifyURL, "");
			} catch (Exception e) {
				e.printStackTrace();
			}
            QueryStatusTransactionResponse queryStatusTransactionResponse = QueryStatusTransaction.process(environment, "1561972787557", "1562135830002");

//          Refund -- Manual Testing
//            RefundMoMoResponse response = RefundMoMo.process(environment, "1562135830002", orderId, "10000", "2304963912");
//            RefundStatus.process(environment, "1562135830002", "1561972787557");
//
        String publicKey = "a5oHNsu6Kz1E2jPh";
        String privateKey = "3gtsoyPAYWlwH1sYZeGrlb4H1X1O1Ldw";

        String partnerCode = "MOMOSQPD20200630";
        String phoneNumber = "0963181714";
        String username = "nhat.nguyen";

//        orderId = String.valueOf(System.currentTimeMillis());
//        PayATMResponse payATMResponse = PayATM.process(environment, requestId, orderId, bankCode, "35000", "Pay With MoMo", returnURL, notifyURL, "");

//        orderId = String.valueOf(System.currentTimeMillis());
//        RefundATM.process(environment, orderId, "1561972550332", "10000", "2304962904", bankCode);
//        RefundStatus.process(environment, "1562135830002", "1561972787557");
//
        generateRSA(customerNumber, "247", "247", "nhatnguyen", environment.getPartnerInfo().getPartnerCode(), amount, publicKey);

    //generate RSA signature from given information

	}

	protected void doPut(HttpServletRequest request, HttpServletResponse response) 
			throws ServletException, IOException {

	}
	protected void doDelete(HttpServletRequest request, HttpServletResponse response) 
			throws ServletException, IOException {

	}
    public static String generateRSA(String phoneNumber, String billId, String transId, String username, String partnerCode, long amount, String publicKey) throws Exception {
        // current version of Parameter key name is 2.0
        Map<String, Object> rawData = new HashMap<>();
        rawData.put(Parameter.CUSTOMER_NUMBER, phoneNumber);
        rawData.put(Parameter.PARTNER_REF_ID, billId);
        rawData.put(Parameter.PARTNER_TRANS_ID, transId);
        rawData.put(Parameter.USERNAME, username);
        rawData.put(Parameter.PARTNER_CODE, partnerCode);
        rawData.put(Parameter.AMOUNT, amount);

        Gson gson = new Gson();
        String jsonStr = gson.toJson(rawData);
        byte[] testByte = jsonStr.getBytes(StandardCharsets.UTF_8);
        String hashRSA = Encoder.encryptRSA(testByte, publicKey);

        return hashRSA;
    }

}
