package com.smartfoodhcmut.controller.admin.api;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.inject.Inject;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.tomcat.util.http.fileupload.FileItem;
import org.apache.tomcat.util.http.fileupload.FileItemFactory;
import org.apache.tomcat.util.http.fileupload.RequestContext;
import org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
import org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.smartfoodhcmut.model.FoodsModel;
import com.smartfoodhcmut.model.UserModel;
import com.smartfoodhcmut.service.IFoodsService;
import com.smartfoodhcmut.utils.HttpUtil;
import com.smartfoodhcmut.utils.SessionUtil;

@WebServlet(urlPatterns = {"/api-admin-foods"})
public class FoodsAPI extends HttpServlet {

	
	@Inject
	private IFoodsService foodsService;
	private static final long serialVersionUID = 2535844104962403259L;
	private static final String UPLOAD_DIRECTORY = "D:/CNPM-SmartFood-master/CNPM-SmartFood-master/workspace/smartfood-06-2020/src/main/webapp/views/web/image";
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) 
			throws ServletException, IOException {

		boolean isMultipart = ServletFileUpload.isMultipartContent(request);
		 
		if (isMultipart) {
			// Create a factory for disk-based file items
			FileItemFactory factory = new DiskFileItemFactory();
			// Create a new file upload handler
			ServletFileUpload upload = new ServletFileUpload(factory);
			try {
				List<FileItem> fileItems = upload.parseRequest((RequestContext) request);
				String pathFile = "";
                                // loop for multi file
				for (FileItem item : fileItems) {
					if (!item.isFormField()) {
						pathFile = UPLOAD_DIRECTORY + File.separator + item.getName();
						item.write(new File(pathFile));
					}
				}
 
			} catch (Exception e) {
			}
		}
 
		
		ObjectMapper mapper = new ObjectMapper();
		request.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		FoodsModel foodsModel = HttpUtil.of(request.getReader()).toModel(FoodsModel.class);	
		foodsModel.setCreatedBy(((UserModel) SessionUtil.getInstance().getValue(request, "USERMODEL")).getUserName());
		foodsModel = foodsService.save(foodsModel);
		mapper.writeValue(response.getOutputStream(), foodsModel);
	}

	protected void doPut(HttpServletRequest request, HttpServletResponse response) 
			throws ServletException, IOException {
		ObjectMapper mapper = new ObjectMapper();
		request.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		FoodsModel updateFoods = HttpUtil.of(request.getReader()).toModel(FoodsModel.class);
		updateFoods.setCreatedBy(((UserModel) SessionUtil.getInstance().getValue(request, "USERMODEL")).getUserName());
		updateFoods = foodsService.update(updateFoods);
		mapper.writeValue(response.getOutputStream(), updateFoods);

	}
	protected void doDelete(HttpServletRequest request, HttpServletResponse response) 
			throws ServletException, IOException {
		ObjectMapper mapper = new ObjectMapper();
		request.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		FoodsModel foodsModel = HttpUtil.of(request.getReader()).toModel(FoodsModel.class);
		foodsService.delete(foodsModel.getIds());
		mapper.writeValue(response.getOutputStream(), "{}");
	}
}
