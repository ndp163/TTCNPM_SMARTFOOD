package com.smartfoodhcmut.controller.admin;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.inject.Inject;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import com.smartfoodhcmut.constant.SystemConstant;
import com.smartfoodhcmut.model.FoodsModel;
import com.smartfoodhcmut.paging.PageRequest;
import com.smartfoodhcmut.paging.Pageble;
import com.smartfoodhcmut.service.ICategoryService;
import com.smartfoodhcmut.service.IFoodsService;
import com.smartfoodhcmut.sort.Sorter;
import com.smartfoodhcmut.utils.FormUtil;
import com.smartfoodhcmut.utils.MessageUtil;

@WebServlet(urlPatterns = {"/admin-foods"})	

public class FoodsController extends HttpServlet {

	private static final long serialVersionUID = 1L;
	
	@Inject
	private IFoodsService foodsService;
	
	@Inject
	private ICategoryService categoryService;
	private String dbURL = "jdbc:mysql://localhost:3306/smartfood062020";
    private String dbUser = "root";
    private String dbPass = "Dung2000";
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		FoodsModel model = FormUtil.toModel(FoodsModel.class, request);
		String view = "";
		if (model.getType().equals(SystemConstant.LIST)) {
			Pageble pageble = new PageRequest(model.getPage(), model.getMaxPageItem(),
					new Sorter(model.getSortName(), model.getSortBy()));
			model.setListResult(foodsService.findAll(pageble));
			model.setTotalItem(foodsService.getTotalItem());
			model.setTotalPage((int) Math.ceil((double)model.getTotalItem() / model.getMaxPageItem()));
			
			view = "/views/admin/foods/list.jsp";
		} else if (model.getType().equals(SystemConstant.EDIT)) {
			if (model.getId() != null) {
				model = foodsService.findOne(model.getId());
			} 
			request.setAttribute("categories", categoryService.findAll());
			view = "/views/admin/foods/edit.jsp";
		}
		MessageUtil.showMessage(request);
		request.setAttribute(SystemConstant.MODEL, model);
		RequestDispatcher rd = request.getRequestDispatcher(view);
		rd.forward(request, response);
	}
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String categoryid = request.getParameter("categoryId");
        String title = request.getParameter("Title");
         
        InputStream inputStream = null; // input stream of the upload file
         
        // obtains the upload file part in this multipart request
        Part filePart = request.getPart("content");
        if (filePart != null) {
            // prints out some information for debugging
            System.out.println(filePart.getName());
            System.out.println(filePart.getSize());
            System.out.println(filePart.getContentType());
             
            // obtains input stream of the upload file
            inputStream = filePart.getInputStream();
        }
         
        Connection conn = null; // connection to the database
        String message = null;  // message will be sent back to client
         
        try {
            // connects to the database
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            conn = DriverManager.getConnection(dbURL, dbUser, dbPass);
 
            // constructs SQL statement
            String sql = "INSERT INTO foods (categoryid, title, content) values (?, ?, ?)";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, categoryid);
            statement.setString(2, title);
             
            if (inputStream != null) {
                // fetches input stream of the upload file for the blob column
                statement.setBlob(3, inputStream);
            }
 
            // sends the statement to the database server
            int row = statement.executeUpdate();
            if (row > 0) {
                message = "File uploaded and saved into database";
            }
        } catch (SQLException ex) {
            message = "ERROR: " + ex.getMessage();
            ex.printStackTrace();
        } finally {
            if (conn != null) {
                // closes the database connection
                try {
                    conn.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
            // sets the message in request scope
            request.setAttribute("Message", message);
             
            // forwards to the message page
            getServletContext().getRequestDispatcher("/Message.jsp").forward(request, response);
        }
	}
}
